name: Android CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Criar google-services.json (se existir)
        run: |
          if [[ -n "${{ secrets.GOOGLE_SERVICES_JSON }}" ]]; then
            echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json
          else
            echo "⚠️ GOOGLE_SERVICES_JSON não configurado no Secrets!"
          fi

      - name: Dar permissão ao Gradle Wrapper
        run: chmod +x gradlew

      - name: Rodar testes unitários
        run: ./gradlew test --continue

      - name: Salvar relatórios de teste
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: app/build/test-results/**/*.xml

  build_aab:
    name: Build & Sign AAB
    runs-on: ubuntu-latest
    needs: test  # Só roda se os testes passarem

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Criar google-services.json (se existir)
        run: |
          if [[ -n "${{ secrets.GOOGLE_SERVICES_JSON }}" ]]; then
            echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json
          else
            echo "⚠️ GOOGLE_SERVICES_JSON não configurado no Secrets!"
          fi

      - name: Dar permissão ao Gradle Wrapper
        run: chmod +x gradlew

      - name: Restaurar Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks

      - name: Exportar credenciais para assinatura
        run: |
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Gerar AAB (Android App Bundle)
        run: ./gradlew bundleRelease

      - name: Salvar AAB gerado
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/bundle/release/app-release.aab
